name: build

permissions:
  contents: write

on:
  push:
  schedule:
    - cron: "25 23 * * *"
  workflow_dispatch:
    inputs:
      sha:
        description: "The sha of the commit to build"
        required: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{steps.get_sha.outputs.sha}}
    steps:
      - id: get_sha
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{github.event.inputs.sha}}" ]
          then
            latestSha="${{github.event.inputs.sha}}"
          else
            latestSha="$(curl -L https://api.github.com/repos/SagerNet/sing-box/commits/dev-next | jq -r '.sha')"
          fi
          nowSha=$(curl -L https://github.com/AsenHu/box_builder/releases/download/quic/version.txt) || nowSha="false"
          if [ "$latestSha" != "$nowSha" ]
          then
            echo "sha=$latestSha"  >> $GITHUB_OUTPUT
            echo "$latestSha" > version.txt
            gh release delete --yes \
              --repo="${{github.repository}}" \
              --cleanup-tag quic || echo "Nothing to delete."
            sleep 1
            gh release create "quic" \
              --repo="${{github.repository}}" \
              --title="${latestSha:0:7}_quic" \
              --generate-notes
            gh release upload "quic" "version.txt" \
              --clobber \
              --repo="${{github.repository}}"
          else
            echo "sha=false" >> $GITHUB_OUTPUT
            exit
          fi

  quic_build:
    if: needs.prepare.outputs.sha != 'false'
    strategy:
      matrix:
        include:
          - name: sing-box-linux-amd64-v1
            goos: linux
            goarch: amd64
            goamd64: v1

          - name: sing-box-linux-amd64-v2
            goos: linux
            goarch: amd64
            goamd64: v2

          - name: sing-box-linux-amd64-v3
            goos: linux
            goarch: amd64
            goamd64: v3

          - name: sing-box-linux-amd64-v4
            goos: linux
            goarch: amd64
            goamd64: v4

          - name: sing-box-windows-amd64-v1
            goos: windows
            goarch: amd64
            goamd64: v1

          - name: sing-box-windows-amd64-v2
            goos: windows
            goarch: amd64
            goamd64: v2

          - name: sing-box-windows-amd64-v3
            goos: windows
            goarch: amd64
            goamd64: v3

          - name: sing-box-windows-amd64-v4
            goos: windows
            goarch: amd64
            goamd64: v4

          - name: sing-box-linux-386
            goos: linux
            goarch: 386
    env:
      GOOS: ${{matrix.goos}}
      GOARCH: ${{matrix.goarch}}
      GOAMD64: ${{matrix.goamd64}}
      CGO_ENABLED: 0
      TAGS: with_quic
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'SagerNet/sing-box'
          ref: ${{needs.prepare.outputs.sha}}
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: build
        run : |
          make
          xz -9cv sing-box > ${{matrix.name}}.xz || xz -9cv sing-box.exe > ${{matrix.name}}.xz
      - name: upload
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "quic" "${{matrix.name}}.xz" \
            --clobber \
            --repo="${{github.repository}}"
