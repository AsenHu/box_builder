name: build

permissions:
  contents: write

on:
  push:
  schedule:
    - cron: "25 23 * * *"
  workflow_dispatch:
    inputs:
      sha:
        description: "The sha of the commit to build"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: get_sha
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{github.event.inputs.sha}}" ]
          then
            latestSha="${{github.event.inputs.sha}}"
          else
            latestSha="$(curl -L https://api.github.com/repos/SagerNet/sing-box/commits/dev-next | jq -r '.sha')"
          fi
          nowSha=$(curl -L https://github.com/AsenHu/box_builder/releases/download/quic/version.txt) || nowSha="false"
          if [ "$latestSha" == "$nowSha" ]
          then
            exit
          fi
          gh release delete --yes \
            --repo="${{github.repository}}" \
            --cleanup-tag quic || echo "Nothing to delete."
          echo "sha=$latestSha"  >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          repository: 'SagerNet/sing-box'
          ref: ${{env.sha}}
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - env:
          NAME: sing-box-linux-amd64-v1
          dir: quic
          GOOS: linux
          GOARCH: amd64
          GOAMD64: v1
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - env:
          NAME: sing-box-linux-amd64-v2
          dir: quic
          GOOS: linux
          GOARCH: amd64
          GOAMD64: v2
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - env:
          NAME: sing-box-linux-amd64-v3
          dir: quic
          GOOS: linux
          GOARCH: amd64
          GOAMD64: v3
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - env:
          NAME: sing-box-linux-amd64-v4
          dir: quic
          GOOS: linux
          GOARCH: amd64
          GOAMD64: v4
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - env:
          NAME: sing-box-windows-amd64-v1
          dir: quic
          GOOS: windows
          GOARCH: amd64
          GOAMD64: v1
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - env:
          NAME: sing-box-windows-amd64-v2
          dir: quic
          GOOS: windows
          GOARCH: amd64
          GOAMD64: v2
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - env:
          NAME: sing-box-windows-amd64-v3
          dir: quic
          GOOS: windows
          GOARCH: amd64
          GOAMD64: v3
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - env:
          NAME: sing-box-windows-amd64-v4
          dir: quic
          GOOS: windows
          GOARCH: amd64
          GOAMD64: v4
          CGO_ENABLED: 0
          TAGS: with_quic
        run : |
          mkdir -p "$dir"
          go build -ldflags "-s -w" -tags "$TAGS" ./cmd/sing-box
          xz -9cv sing-box > "./$dir/$NAME".xz || xz -9cv sing-box.exe > "./$dir/$NAME".xz
      - name: upload
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{env.sha}}
          tag: quic
        run: |
          echo "$sha" > version.txt
          gh release create "$tag" \
            --repo="${{github.repository}}" \
            --title="${sha:0:7}_$tag" \
            --generate-notes
          gh release upload "$tag" "version.txt" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-linux-amd64-v1.xz" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-linux-amd64-v2.xz" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-linux-amd64-v3.xz" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-linux-amd64-v4.xz" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-windows-amd64-v1.xz" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-windows-amd64-v2.xz" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-windows-amd64-v3.xz" \
            --clobber \
            --repo="${{github.repository}}"
          gh release upload "$tag" "./quic/sing-box-windows-amd64-v4.xz" \
            --clobber \
            --repo="${{github.repository}}"